generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "windows"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum OrderType {
  DELIVERY    // 배달
  PICK_UP     // 픽업
}

enum UserType {
  INTERIOR    // 인테리어
  FACTORY     // 자재공장
}

enum ProductType {
  DOOR        // 문짝
  FINISH      // 마감재
  CABINET     // 부분장
  HARDWARE    // 하드웨어
  ACCESSORY   // 부속
}

// 사용자 테이블 (auth, app_user)
model User {
  id                  Int     @id @default(autoincrement())
  user_phone          String  @unique @db.VarChar(11)
  user_type           UserType
  user_road_address   String?
  user_detail_address String?

  cart   Cart?
  orders Order[]
}

// 장바구니 테이블
model Cart {
  id         Int        @id @default(autoincrement())
  user       User       @relation(fields: [user_id], references: [id])
  user_id    Int        @unique
  cart_items CartItem[]
  orders     Order[]    @relation("CartToOrder") // Order 모델과의 역방향 relation 필드
}

// 장바구니 아이템 테이블
model CartItem {
  id           Int    @id @default(autoincrement())
  cart         Cart   @relation(fields: [cart_id], references: [id])
  cart_id      Int
  product_type ProductType
  unit_price   Int?
  item_count   Int
  item_options Json
}

// 주문 테이블
model Order {
  order_id        String   @id @db.VarChar(12) @default(dbgenerated())
  seq             Int      @default(0)
  user            User     @relation(fields: [user_id], references: [id])
  user_id         Int
  order_items     OrderItem[]
  cart            Cart     @relation("CartToOrder", fields: [cart_id], references: [id])
  cart_id         Int
  order_type      OrderType
  recipient_phone String   @db.VarChar(11)
  order_price     Int
  order_options   Json?
  created_at      DateTime @default(now())
}

// 주문 아이템 테이블
model OrderItem {
  order_item_id   Int        @id @default(autoincrement())
  order_id        String
  product_type    ProductType
  unit_price      Int
  item_count      Int
  item_options    Json
  image_url       String?    @db.VarChar(512) // 주문 아이템별 이미지 URL
  created_at      DateTime   @default(now())
  last_updated_at DateTime   @updatedAt
  order           Order      @relation(fields: [order_id], references: [order_id])
}